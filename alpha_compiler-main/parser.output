State 102 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmts
    2        | ε

    3 stmts: stmts stmt
    4      | stmt

    5 stmt: expr SEMICOLON
    6     | ifstmts
    7     | whilestmts
    8     | forstmts
    9     | returnstmts
   10     | BREAK SEMICOLON
   11     | CONTINUE SEMICOLON
   12     | block
   13     | funcdef
   14     | SEMICOLON

   15 expr: assignexpr
   16     | expr PLUS expr
   17     | expr MINUS expr
   18     | expr MUL expr
   19     | expr DIV expr
   20     | expr MOD expr
   21     | expr GREATER expr
   22     | expr GREATER_EQUAL expr
   23     | expr LESS expr
   24     | expr LESS_EQUAL expr

   25 $@1: ε

   26 expr: expr EQUAL $@1 expr

   27 $@2: ε

   28 expr: expr DIFF $@2 expr

   29 $@3: ε

   30 expr: expr AND $@3 M expr

   31 $@4: ε

   32 expr: expr OR $@4 M expr
   33     | term

   34 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS
   35     | MINUS expr
   36     | NOT expr
   37     | PLUS_PLUS lvalue
   38     | lvalue PLUS_PLUS
   39     | MINUS_MINUS lvalue
   40     | lvalue MINUS_MINUS
   41     | primary

   42 assignexpr: lvalue ASSIGN expr

   43 primary: lvalue
   44        | call
   45        | objectdef
   46        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   47        | const

   48 lvalue: ID
   49       | LOCAL ID
   50       | D_COLON ID
   51       | member

   52 member: lvalue DOT ID
   53       | lvalue LEFT_BRACKET expr RIGHT_BRACKET
   54       | call DOT ID
   55       | call LEFT_BRACKET expr RIGHT_BRACKET

   56 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   57     | lvalue callsuffix
   58     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   59 callsuffix: normcall
   60           | methodcall

   61 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   62 methodcall: D_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   63 elist: ε
   64      | expr
   65      | elist COMMA expr

   66 objectdef: LEFT_BRACKET elist RIGHT_BRACKET
   67          | LEFT_BRACKET indexed RIGHT_BRACKET

   68 indexed: indexedelem
   69        | indexed COMMA indexedelem

   70 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE

   71 $@5: ε

   72 block: LEFT_BRACE $@5 RIGHT_BRACE

   73 $@6: ε

   74 block: LEFT_BRACE $@6 stmts RIGHT_BRACE

   75 funcname: ID
   76         | ε

   77 $@7: ε

   78 funcprefix: FUNCTION $@7 funcname

   79 $@8: ε

   80 funcargs: LEFT_PARENTHESIS $@8 idlist RIGHT_PARENTHESIS

   81 funcbody: block

   82 funcdef: funcprefix funcargs funcbody

   83 const: INTEGER
   84      | REALCONST
   85      | STRING
   86      | NIL
   87      | TRUE
   88      | FALSE

   89 idlist: ε
   90       | ID
   91       | idlist COMMA ID

   92 ifprefix: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

   93 elseprefix: ELSE

   94 ifstmts: ifprefix stmt
   95        | ifprefix stmt elseprefix stmt

   96 whilestart: WHILE

   97 whilecond: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

   98 whilestmts: whilestart whilecond loopstmt

   99 N: ε

  100 M: ε

  101 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON M expr SEMICOLON

  102 forstmts: forprefix N elist RIGHT_PARENTHESIS N loopstmt N

  103 loopstart: ε

  104 loopend: ε

  105 loopstmt: loopstart stmt loopend

  106 returnstmts: RETURN SEMICOLON
  107            | RETURN expr SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTEGER <intVal> (258) 83
    STRING <strVal> (259) 85
    REALCONST <floatVal> (260) 84
    ID <strVal> (261) 48 49 50 52 54 62 75 90 91
    IF (262) 92
    ELSE (263) 93
    WHILE (264) 96
    FOR (265) 101
    FUNCTION (266) 78
    RETURN (267) 106 107
    BREAK <stm> (268) 10
    CONTINUE <stm> (269) 11
    AND (270) 30
    NOT (271) 36
    OR (272) 32
    LOCAL (273) 49
    TRUE (274) 87
    FALSE (275) 88
    NIL (276) 86
    ASSIGN (277) 42
    PLUS (278) 16
    MINUS (279) 17 35
    MUL (280) 18
    DIV (281) 19
    MOD (282) 20
    EQUAL (283) 26
    DIFF (284) 28
    PLUS_PLUS (285) 37 38
    MINUS_MINUS (286) 39 40
    GREATER (287) 21
    LESS (288) 23
    GREATER_EQUAL (289) 22
    LESS_EQUAL (290) 24
    LEFT_BRACE (291) 70 72 74
    RIGHT_BRACE (292) 70 72 74
    LEFT_BRACKET (293) 53 55 66 67
    RIGHT_BRACKET (294) 53 55 66 67
    LEFT_PARENTHESIS (295) 34 46 56 58 61 62 80 92 97 101
    RIGHT_PARENTHESIS (296) 34 46 56 58 61 62 80 92 97 102
    SEMICOLON (297) 5 10 11 14 101 106 107
    COMMA (298) 65 69 91
    COLON (299) 70
    D_COLON (300) 50
    DOT (301) 52 54
    D_DOT (302) 62
    UMINUS (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1 2
        on right: 0
    stmts <stm> (51)
        on left: 3 4
        on right: 1 3 74
    stmt <stm> (52)
        on left: 5 6 7 8 9 10 11 12 13 14
        on right: 3 4 94 95 105
    expr <expression> (53)
        on left: 15 16 17 18 19 20 21 22 23 24 26 28 30 32 33
        on right: 5 16 17 18 19 20 21 22 23 24 26 28 30 32 34 35 36 42 53 55 64 65 70 92 97 101 107
    $@1 (54)
        on left: 25
        on right: 26
    $@2 (55)
        on left: 27
        on right: 28
    $@3 (56)
        on left: 29
        on right: 30
    $@4 (57)
        on left: 31
        on right: 32
    term <expression> (58)
        on left: 34 35 36 37 38 39 40 41
        on right: 33
    assignexpr <expression> (59)
        on left: 42
        on right: 15
    primary <expression> (60)
        on left: 43 44 45 46 47
        on right: 41
    lvalue <expression> (61)
        on left: 48 49 50 51
        on right: 37 38 39 40 42 43 52 53 57
    member <expression> (62)
        on left: 52 53 54 55
        on right: 51
    call <expression> (63)
        on left: 56 57 58
        on right: 44 54 55 56
    callsuffix <calls> (64)
        on left: 59 60
        on right: 57
    normcall <calls> (65)
        on left: 61
        on right: 59
    methodcall <calls> (66)
        on left: 62
        on right: 60
    elist <expression> (67)
        on left: 63 64 65
        on right: 56 58 61 62 65 66 101 102
    objectdef <expression> (68)
        on left: 66 67
        on right: 45
    indexed <tablepair> (69)
        on left: 68 69
        on right: 67 69
    indexedelem <tablepair> (70)
        on left: 70
        on right: 68 69
    block <stm> (71)
        on left: 72 74
        on right: 12 81
    $@5 (72)
        on left: 71
        on right: 72
    $@6 (73)
        on left: 73
        on right: 74
    funcname <strVal> (74)
        on left: 75 76
        on right: 78
    funcprefix <symTabEntry> (75)
        on left: 78
        on right: 82
    $@7 (76)
        on left: 77
        on right: 78
    funcargs (77)
        on left: 80
        on right: 82
    $@8 (78)
        on left: 79
        on right: 80
    funcbody <undef> (79)
        on left: 81
        on right: 82
    funcdef <symTabEntry> (80)
        on left: 82
        on right: 13 46 58
    const <expression> (81)
        on left: 83 84 85 86 87 88
        on right: 47
    idlist (82)
        on left: 89 90 91
        on right: 80 91
    ifprefix <undef> (83)
        on left: 92
        on right: 94 95
    elseprefix <undef> (84)
        on left: 93
        on right: 95
    ifstmts <stm> (85)
        on left: 94 95
        on right: 6
    whilestart <undef> (86)
        on left: 96
        on right: 98
    whilecond <undef> (87)
        on left: 97
        on right: 98
    whilestmts <stm> (88)
        on left: 98
        on right: 7
    N <intVal> (89)
        on left: 99
        on right: 102
    M <intVal> (90)
        on left: 100
        on right: 30 32 101
    forprefix <forloop> (91)
        on left: 101
        on right: 102
    forstmts <stm> (92)
        on left: 102
        on right: 8
    loopstart (93)
        on left: 103
        on right: 105
    loopend (94)
        on left: 104
        on right: 105
    loopstmt <stm> (95)
        on left: 105
        on right: 98 102
    returnstmts <stm> (96)
        on left: 106 107
        on right: 9


State 0

    0 $accept: • program $end

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    IF                shift, and go to state 5
    WHILE             shift, and go to state 6
    FOR               shift, and go to state 7
    FUNCTION          shift, and go to state 8
    RETURN            shift, and go to state 9
    BREAK             shift, and go to state 10
    CONTINUE          shift, and go to state 11
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    D_COLON           shift, and go to state 24

    $default  reduce using rule 2 (program)

    program      go to state 25
    stmts        go to state 26
    stmt         go to state 27
    expr         go to state 28
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    objectdef    go to state 35
    block        go to state 36
    funcprefix   go to state 37
    funcdef      go to state 38
    const        go to state 39
    ifprefix     go to state 40
    ifstmts      go to state 41
    whilestart   go to state 42
    whilestmts   go to state 43
    forprefix    go to state 44
    forstmts     go to state 45
    returnstmts  go to state 46


State 1

   83 const: INTEGER •

    $default  reduce using rule 83 (const)


State 2

   85 const: STRING •

    $default  reduce using rule 85 (const)


State 3

   84 const: REALCONST •

    $default  reduce using rule 84 (const)


State 4

   48 lvalue: ID •

    $default  reduce using rule 48 (lvalue)


State 5

   92 ifprefix: IF • LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 47


State 6

   96 whilestart: WHILE •

    $default  reduce using rule 96 (whilestart)


State 7

  101 forprefix: FOR • LEFT_PARENTHESIS elist SEMICOLON M expr SEMICOLON

    LEFT_PARENTHESIS  shift, and go to state 48


State 8

   78 funcprefix: FUNCTION • $@7 funcname

    $default  reduce using rule 77 ($@7)

    $@7  go to state 49


State 9

  106 returnstmts: RETURN • SEMICOLON
  107            | RETURN • expr SEMICOLON

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 50
    D_COLON           shift, and go to state 24

    expr        go to state 51
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 10

   10 stmt: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 52


State 11

   11 stmt: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 53


State 12

   36 term: NOT • expr

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    expr        go to state 54
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 13

   49 lvalue: LOCAL • ID

    ID  shift, and go to state 55


State 14

   87 const: TRUE •

    $default  reduce using rule 87 (const)


State 15

   88 const: FALSE •

    $default  reduce using rule 88 (const)


State 16

   86 const: NIL •

    $default  reduce using rule 86 (const)


State 17

   35 term: MINUS • expr

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    expr        go to state 56
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 18

   37 term: PLUS_PLUS • lvalue

    ID                shift, and go to state 4
    LOCAL             shift, and go to state 13
    LEFT_PARENTHESIS  shift, and go to state 57
    D_COLON           shift, and go to state 24

    lvalue  go to state 58
    member  go to state 33
    call    go to state 59


State 19

   39 term: MINUS_MINUS • lvalue

    ID                shift, and go to state 4
    LOCAL             shift, and go to state 13
    LEFT_PARENTHESIS  shift, and go to state 57
    D_COLON           shift, and go to state 24

    lvalue  go to state 60
    member  go to state 33
    call    go to state 59


State 20

   72 block: LEFT_BRACE • $@5 RIGHT_BRACE
   74      | LEFT_BRACE • $@6 stmts RIGHT_BRACE

    RIGHT_BRACE  reduce using rule 71 ($@5)
    $default     reduce using rule 73 ($@6)

    $@5  go to state 61
    $@6  go to state 62


State 21

   66 objectdef: LEFT_BRACKET • elist RIGHT_BRACKET
   67          | LEFT_BRACKET • indexed RIGHT_BRACKET

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACE        shift, and go to state 63
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr         go to state 64
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    elist        go to state 65
    objectdef    go to state 35
    indexed      go to state 66
    indexedelem  go to state 67
    const        go to state 39


State 22

   34 term: LEFT_PARENTHESIS • expr RIGHT_PARENTHESIS
   46 primary: LEFT_PARENTHESIS • funcdef RIGHT_PARENTHESIS
   58 call: LEFT_PARENTHESIS • funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    FUNCTION          shift, and go to state 8
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    expr        go to state 68
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    funcprefix  go to state 37
    funcdef     go to state 69
    const       go to state 39


State 23

   14 stmt: SEMICOLON •

    $default  reduce using rule 14 (stmt)


State 24

   50 lvalue: D_COLON • ID

    ID  shift, and go to state 70


State 25

    0 $accept: program • $end

    $end  shift, and go to state 71


State 26

    1 program: stmts •
    3 stmts: stmts • stmt

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    IF                shift, and go to state 5
    WHILE             shift, and go to state 6
    FOR               shift, and go to state 7
    FUNCTION          shift, and go to state 8
    RETURN            shift, and go to state 9
    BREAK             shift, and go to state 10
    CONTINUE          shift, and go to state 11
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    D_COLON           shift, and go to state 24

    $default  reduce using rule 1 (program)

    stmt         go to state 72
    expr         go to state 28
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    objectdef    go to state 35
    block        go to state 36
    funcprefix   go to state 37
    funcdef      go to state 38
    const        go to state 39
    ifprefix     go to state 40
    ifstmts      go to state 41
    whilestart   go to state 42
    whilestmts   go to state 43
    forprefix    go to state 44
    forstmts     go to state 45
    returnstmts  go to state 46


State 27

    4 stmts: stmt •

    $default  reduce using rule 4 (stmts)


State 28

    5 stmt: expr • SEMICOLON
   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    EQUAL          shift, and go to state 80
    DIFF           shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    SEMICOLON      shift, and go to state 86


State 29

   33 expr: term •

    $default  reduce using rule 33 (expr)


State 30

   15 expr: assignexpr •

    $default  reduce using rule 15 (expr)


State 31

   41 term: primary •

    $default  reduce using rule 41 (term)


State 32

   38 term: lvalue • PLUS_PLUS
   40     | lvalue • MINUS_MINUS
   42 assignexpr: lvalue • ASSIGN expr
   43 primary: lvalue •
   52 member: lvalue • DOT ID
   53       | lvalue • LEFT_BRACKET expr RIGHT_BRACKET
   57 call: lvalue • callsuffix

    ASSIGN            shift, and go to state 87
    PLUS_PLUS         shift, and go to state 88
    MINUS_MINUS       shift, and go to state 89
    LEFT_BRACKET      shift, and go to state 90
    LEFT_PARENTHESIS  shift, and go to state 91
    DOT               shift, and go to state 92
    D_DOT             shift, and go to state 93

    $default  reduce using rule 43 (primary)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 33

   51 lvalue: member •

    $default  reduce using rule 51 (lvalue)


State 34

   44 primary: call •
   54 member: call • DOT ID
   55       | call • LEFT_BRACKET expr RIGHT_BRACKET
   56 call: call • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACKET      shift, and go to state 97
    LEFT_PARENTHESIS  shift, and go to state 98
    DOT               shift, and go to state 99

    $default  reduce using rule 44 (primary)


State 35

   45 primary: objectdef •

    $default  reduce using rule 45 (primary)


State 36

   12 stmt: block •

    $default  reduce using rule 12 (stmt)


State 37

   82 funcdef: funcprefix • funcargs funcbody

    LEFT_PARENTHESIS  shift, and go to state 100

    funcargs  go to state 101


State 38

   13 stmt: funcdef •

    $default  reduce using rule 13 (stmt)


State 39

   47 primary: const •

    $default  reduce using rule 47 (primary)


State 40

   94 ifstmts: ifprefix • stmt
   95        | ifprefix • stmt elseprefix stmt

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    IF                shift, and go to state 5
    WHILE             shift, and go to state 6
    FOR               shift, and go to state 7
    FUNCTION          shift, and go to state 8
    RETURN            shift, and go to state 9
    BREAK             shift, and go to state 10
    CONTINUE          shift, and go to state 11
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    D_COLON           shift, and go to state 24

    stmt         go to state 102
    expr         go to state 28
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    objectdef    go to state 35
    block        go to state 36
    funcprefix   go to state 37
    funcdef      go to state 38
    const        go to state 39
    ifprefix     go to state 40
    ifstmts      go to state 41
    whilestart   go to state 42
    whilestmts   go to state 43
    forprefix    go to state 44
    forstmts     go to state 45
    returnstmts  go to state 46


State 41

    6 stmt: ifstmts •

    $default  reduce using rule 6 (stmt)


State 42

   98 whilestmts: whilestart • whilecond loopstmt

    LEFT_PARENTHESIS  shift, and go to state 103

    whilecond  go to state 104


State 43

    7 stmt: whilestmts •

    $default  reduce using rule 7 (stmt)


State 44

  102 forstmts: forprefix • N elist RIGHT_PARENTHESIS N loopstmt N

    $default  reduce using rule 99 (N)

    N  go to state 105


State 45

    8 stmt: forstmts •

    $default  reduce using rule 8 (stmt)


State 46

    9 stmt: returnstmts •

    $default  reduce using rule 9 (stmt)


State 47

   92 ifprefix: IF LEFT_PARENTHESIS • expr RIGHT_PARENTHESIS

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    expr        go to state 106
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 48

  101 forprefix: FOR LEFT_PARENTHESIS • elist SEMICOLON M expr SEMICOLON

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 107
    objectdef   go to state 35
    const       go to state 39


State 49

   78 funcprefix: FUNCTION $@7 • funcname

    ID  shift, and go to state 108

    $default  reduce using rule 76 (funcname)

    funcname  go to state 109


State 50

  106 returnstmts: RETURN SEMICOLON •

    $default  reduce using rule 106 (returnstmts)


State 51

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr
  107 returnstmts: RETURN expr • SEMICOLON

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    EQUAL          shift, and go to state 80
    DIFF           shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    SEMICOLON      shift, and go to state 110


State 52

   10 stmt: BREAK SEMICOLON •

    $default  reduce using rule 10 (stmt)


State 53

   11 stmt: CONTINUE SEMICOLON •

    $default  reduce using rule 11 (stmt)


State 54

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr
   36 term: NOT expr •

    $default  reduce using rule 36 (term)


State 55

   49 lvalue: LOCAL ID •

    $default  reduce using rule 49 (lvalue)


State 56

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr
   35 term: MINUS expr •

    $default  reduce using rule 35 (term)


State 57

   58 call: LEFT_PARENTHESIS • funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION  shift, and go to state 8

    funcprefix  go to state 37
    funcdef     go to state 111


State 58

   37 term: PLUS_PLUS lvalue •
   52 member: lvalue • DOT ID
   53       | lvalue • LEFT_BRACKET expr RIGHT_BRACKET
   57 call: lvalue • callsuffix

    LEFT_BRACKET      shift, and go to state 90
    LEFT_PARENTHESIS  shift, and go to state 91
    DOT               shift, and go to state 92
    D_DOT             shift, and go to state 93

    $default  reduce using rule 37 (term)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 59

   54 member: call • DOT ID
   55       | call • LEFT_BRACKET expr RIGHT_BRACKET
   56 call: call • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACKET      shift, and go to state 97
    LEFT_PARENTHESIS  shift, and go to state 98
    DOT               shift, and go to state 99


State 60

   39 term: MINUS_MINUS lvalue •
   52 member: lvalue • DOT ID
   53       | lvalue • LEFT_BRACKET expr RIGHT_BRACKET
   57 call: lvalue • callsuffix

    LEFT_BRACKET      shift, and go to state 90
    LEFT_PARENTHESIS  shift, and go to state 91
    DOT               shift, and go to state 92
    D_DOT             shift, and go to state 93

    $default  reduce using rule 39 (term)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 61

   72 block: LEFT_BRACE $@5 • RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 112


State 62

   74 block: LEFT_BRACE $@6 • stmts RIGHT_BRACE

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    IF                shift, and go to state 5
    WHILE             shift, and go to state 6
    FOR               shift, and go to state 7
    FUNCTION          shift, and go to state 8
    RETURN            shift, and go to state 9
    BREAK             shift, and go to state 10
    CONTINUE          shift, and go to state 11
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    D_COLON           shift, and go to state 24

    stmts        go to state 113
    stmt         go to state 27
    expr         go to state 28
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    objectdef    go to state 35
    block        go to state 36
    funcprefix   go to state 37
    funcdef      go to state 38
    const        go to state 39
    ifprefix     go to state 40
    ifstmts      go to state 41
    whilestart   go to state 42
    whilestmts   go to state 43
    forprefix    go to state 44
    forstmts     go to state 45
    returnstmts  go to state 46


State 63

   70 indexedelem: LEFT_BRACE • expr COLON expr RIGHT_BRACE

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    expr        go to state 114
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 64

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr
   64 elist: expr •

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    EQUAL          shift, and go to state 80
    DIFF           shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    $default  reduce using rule 64 (elist)


State 65

   65 elist: elist • COMMA expr
   66 objectdef: LEFT_BRACKET elist • RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 115
    COMMA          shift, and go to state 116


State 66

   67 objectdef: LEFT_BRACKET indexed • RIGHT_BRACKET
   69 indexed: indexed • COMMA indexedelem

    RIGHT_BRACKET  shift, and go to state 117
    COMMA          shift, and go to state 118


State 67

   68 indexed: indexedelem •

    $default  reduce using rule 68 (indexed)


State 68

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr
   34 term: LEFT_PARENTHESIS expr • RIGHT_PARENTHESIS

    AND                shift, and go to state 73
    OR                 shift, and go to state 74
    PLUS               shift, and go to state 75
    MINUS              shift, and go to state 76
    MUL                shift, and go to state 77
    DIV                shift, and go to state 78
    MOD                shift, and go to state 79
    EQUAL              shift, and go to state 80
    DIFF               shift, and go to state 81
    GREATER            shift, and go to state 82
    LESS               shift, and go to state 83
    GREATER_EQUAL      shift, and go to state 84
    LESS_EQUAL         shift, and go to state 85
    RIGHT_PARENTHESIS  shift, and go to state 119


State 69

   46 primary: LEFT_PARENTHESIS funcdef • RIGHT_PARENTHESIS
   58 call: LEFT_PARENTHESIS funcdef • RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 120


State 70

   50 lvalue: D_COLON ID •

    $default  reduce using rule 50 (lvalue)


State 71

    0 $accept: program $end •

    $default  accept


State 72

    3 stmts: stmts stmt •

    $default  reduce using rule 3 (stmts)


State 73

   30 expr: expr AND • $@3 M expr

    $default  reduce using rule 29 ($@3)

    $@3  go to state 121


State 74

   32 expr: expr OR • $@4 M expr

    $default  reduce using rule 31 ($@4)

    $@4  go to state 122


State 75

   16 expr: expr PLUS • expr

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    expr        go to state 123
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 76

   17 expr: expr MINUS • expr

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    expr        go to state 124
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 77

   18 expr: expr MUL • expr

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    expr        go to state 125
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 78

   19 expr: expr DIV • expr

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    expr        go to state 126
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 79

   20 expr: expr MOD • expr

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    expr        go to state 127
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 80

   26 expr: expr EQUAL • $@1 expr

    $default  reduce using rule 25 ($@1)

    $@1  go to state 128


State 81

   28 expr: expr DIFF • $@2 expr

    $default  reduce using rule 27 ($@2)

    $@2  go to state 129


State 82

   21 expr: expr GREATER • expr

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    expr        go to state 130
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 83

   23 expr: expr LESS • expr

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    expr        go to state 131
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 84

   22 expr: expr GREATER_EQUAL • expr

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    expr        go to state 132
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 85

   24 expr: expr LESS_EQUAL • expr

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    expr        go to state 133
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 86

    5 stmt: expr SEMICOLON •

    $default  reduce using rule 5 (stmt)


State 87

   42 assignexpr: lvalue ASSIGN • expr

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    expr        go to state 134
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 88

   38 term: lvalue PLUS_PLUS •

    $default  reduce using rule 38 (term)


State 89

   40 term: lvalue MINUS_MINUS •

    $default  reduce using rule 40 (term)


State 90

   53 member: lvalue LEFT_BRACKET • expr RIGHT_BRACKET

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    expr        go to state 135
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 91

   61 normcall: LEFT_PARENTHESIS • elist RIGHT_PARENTHESIS

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 136
    objectdef   go to state 35
    const       go to state 39


State 92

   52 member: lvalue DOT • ID

    ID  shift, and go to state 137


State 93

   62 methodcall: D_DOT • ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    ID  shift, and go to state 138


State 94

   57 call: lvalue callsuffix •

    $default  reduce using rule 57 (call)


State 95

   59 callsuffix: normcall •

    $default  reduce using rule 59 (callsuffix)


State 96

   60 callsuffix: methodcall •

    $default  reduce using rule 60 (callsuffix)


State 97

   55 member: call LEFT_BRACKET • expr RIGHT_BRACKET

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    expr        go to state 139
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 98

   56 call: call LEFT_PARENTHESIS • elist RIGHT_PARENTHESIS

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 140
    objectdef   go to state 35
    const       go to state 39


State 99

   54 member: call DOT • ID

    ID  shift, and go to state 141


State 100

   80 funcargs: LEFT_PARENTHESIS • $@8 idlist RIGHT_PARENTHESIS

    $default  reduce using rule 79 ($@8)

    $@8  go to state 142


State 101

   82 funcdef: funcprefix funcargs • funcbody

    LEFT_BRACE  shift, and go to state 20

    block     go to state 143
    funcbody  go to state 144


State 102

   94 ifstmts: ifprefix stmt •
   95        | ifprefix stmt • elseprefix stmt

    ELSE  shift, and go to state 145

    ELSE      [reduce using rule 94 (ifstmts)]
    $default  reduce using rule 94 (ifstmts)

    elseprefix  go to state 146


State 103

   97 whilecond: LEFT_PARENTHESIS • expr RIGHT_PARENTHESIS

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    expr        go to state 147
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 104

   98 whilestmts: whilestart whilecond • loopstmt

    $default  reduce using rule 103 (loopstart)

    loopstart  go to state 148
    loopstmt   go to state 149


State 105

  102 forstmts: forprefix N • elist RIGHT_PARENTHESIS N loopstmt N

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 150
    objectdef   go to state 35
    const       go to state 39


State 106

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr
   92 ifprefix: IF LEFT_PARENTHESIS expr • RIGHT_PARENTHESIS

    AND                shift, and go to state 73
    OR                 shift, and go to state 74
    PLUS               shift, and go to state 75
    MINUS              shift, and go to state 76
    MUL                shift, and go to state 77
    DIV                shift, and go to state 78
    MOD                shift, and go to state 79
    EQUAL              shift, and go to state 80
    DIFF               shift, and go to state 81
    GREATER            shift, and go to state 82
    LESS               shift, and go to state 83
    GREATER_EQUAL      shift, and go to state 84
    LESS_EQUAL         shift, and go to state 85
    RIGHT_PARENTHESIS  shift, and go to state 151


State 107

   65 elist: elist • COMMA expr
  101 forprefix: FOR LEFT_PARENTHESIS elist • SEMICOLON M expr SEMICOLON

    SEMICOLON  shift, and go to state 152
    COMMA      shift, and go to state 116


State 108

   75 funcname: ID •

    $default  reduce using rule 75 (funcname)


State 109

   78 funcprefix: FUNCTION $@7 funcname •

    $default  reduce using rule 78 (funcprefix)


State 110

  107 returnstmts: RETURN expr SEMICOLON •

    $default  reduce using rule 107 (returnstmts)


State 111

   58 call: LEFT_PARENTHESIS funcdef • RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 153


State 112

   72 block: LEFT_BRACE $@5 RIGHT_BRACE •

    $default  reduce using rule 72 (block)


State 113

    3 stmts: stmts • stmt
   74 block: LEFT_BRACE $@6 stmts • RIGHT_BRACE

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    IF                shift, and go to state 5
    WHILE             shift, and go to state 6
    FOR               shift, and go to state 7
    FUNCTION          shift, and go to state 8
    RETURN            shift, and go to state 9
    BREAK             shift, and go to state 10
    CONTINUE          shift, and go to state 11
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    RIGHT_BRACE       shift, and go to state 154
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    D_COLON           shift, and go to state 24

    stmt         go to state 72
    expr         go to state 28
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    objectdef    go to state 35
    block        go to state 36
    funcprefix   go to state 37
    funcdef      go to state 38
    const        go to state 39
    ifprefix     go to state 40
    ifstmts      go to state 41
    whilestart   go to state 42
    whilestmts   go to state 43
    forprefix    go to state 44
    forstmts     go to state 45
    returnstmts  go to state 46


State 114

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr
   70 indexedelem: LEFT_BRACE expr • COLON expr RIGHT_BRACE

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    EQUAL          shift, and go to state 80
    DIFF           shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    COLON          shift, and go to state 155


State 115

   66 objectdef: LEFT_BRACKET elist RIGHT_BRACKET •

    $default  reduce using rule 66 (objectdef)


State 116

   65 elist: elist COMMA • expr

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    expr        go to state 156
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 117

   67 objectdef: LEFT_BRACKET indexed RIGHT_BRACKET •

    $default  reduce using rule 67 (objectdef)


State 118

   69 indexed: indexed COMMA • indexedelem

    LEFT_BRACE  shift, and go to state 63

    indexedelem  go to state 157


State 119

   34 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS •

    $default  reduce using rule 34 (term)


State 120

   46 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS •
   58 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 158

    $default  reduce using rule 46 (primary)


State 121

   30 expr: expr AND $@3 • M expr

    $default  reduce using rule 100 (M)

    M  go to state 159


State 122

   32 expr: expr OR $@4 • M expr

    $default  reduce using rule 100 (M)

    M  go to state 160


State 123

   16 expr: expr • PLUS expr
   16     | expr PLUS expr •
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr

    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 16 (expr)


State 124

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   17     | expr MINUS expr •
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr

    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 17 (expr)


State 125

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   18     | expr MUL expr •
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr

    $default  reduce using rule 18 (expr)


State 126

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   19     | expr DIV expr •
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr

    $default  reduce using rule 19 (expr)


State 127

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   20     | expr MOD expr •
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr

    $default  reduce using rule 20 (expr)


State 128

   26 expr: expr EQUAL $@1 • expr

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    expr        go to state 161
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 129

   28 expr: expr DIFF $@2 • expr

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    expr        go to state 162
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 130

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   21     | expr GREATER expr •
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    MUL    shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 21 (expr)


State 131

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   23     | expr LESS expr •
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    MUL    shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 23 (expr)


State 132

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   22     | expr GREATER_EQUAL expr •
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    MUL    shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 22 (expr)


State 133

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   24     | expr LESS_EQUAL expr •
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    MUL    shift, and go to state 77
    DIV    shift, and go to state 78
    MOD    shift, and go to state 79

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 24 (expr)


State 134

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr
   42 assignexpr: lvalue ASSIGN expr •

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    EQUAL          shift, and go to state 80
    DIFF           shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    $default  reduce using rule 42 (assignexpr)


State 135

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr
   53 member: lvalue LEFT_BRACKET expr • RIGHT_BRACKET

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    EQUAL          shift, and go to state 80
    DIFF           shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    RIGHT_BRACKET  shift, and go to state 163


State 136

   61 normcall: LEFT_PARENTHESIS elist • RIGHT_PARENTHESIS
   65 elist: elist • COMMA expr

    RIGHT_PARENTHESIS  shift, and go to state 164
    COMMA              shift, and go to state 116


State 137

   52 member: lvalue DOT ID •

    $default  reduce using rule 52 (member)


State 138

   62 methodcall: D_DOT ID • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 165


State 139

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr
   55 member: call LEFT_BRACKET expr • RIGHT_BRACKET

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    EQUAL          shift, and go to state 80
    DIFF           shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    RIGHT_BRACKET  shift, and go to state 166


State 140

   56 call: call LEFT_PARENTHESIS elist • RIGHT_PARENTHESIS
   65 elist: elist • COMMA expr

    RIGHT_PARENTHESIS  shift, and go to state 167
    COMMA              shift, and go to state 116


State 141

   54 member: call DOT ID •

    $default  reduce using rule 54 (member)


State 142

   80 funcargs: LEFT_PARENTHESIS $@8 • idlist RIGHT_PARENTHESIS

    ID  shift, and go to state 168

    $default  reduce using rule 89 (idlist)

    idlist  go to state 169


State 143

   81 funcbody: block •

    $default  reduce using rule 81 (funcbody)


State 144

   82 funcdef: funcprefix funcargs funcbody •

    $default  reduce using rule 82 (funcdef)


State 145

   93 elseprefix: ELSE •

    $default  reduce using rule 93 (elseprefix)


State 146

   95 ifstmts: ifprefix stmt elseprefix • stmt

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    IF                shift, and go to state 5
    WHILE             shift, and go to state 6
    FOR               shift, and go to state 7
    FUNCTION          shift, and go to state 8
    RETURN            shift, and go to state 9
    BREAK             shift, and go to state 10
    CONTINUE          shift, and go to state 11
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    D_COLON           shift, and go to state 24

    stmt         go to state 170
    expr         go to state 28
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    objectdef    go to state 35
    block        go to state 36
    funcprefix   go to state 37
    funcdef      go to state 38
    const        go to state 39
    ifprefix     go to state 40
    ifstmts      go to state 41
    whilestart   go to state 42
    whilestmts   go to state 43
    forprefix    go to state 44
    forstmts     go to state 45
    returnstmts  go to state 46


State 147

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr
   97 whilecond: LEFT_PARENTHESIS expr • RIGHT_PARENTHESIS

    AND                shift, and go to state 73
    OR                 shift, and go to state 74
    PLUS               shift, and go to state 75
    MINUS              shift, and go to state 76
    MUL                shift, and go to state 77
    DIV                shift, and go to state 78
    MOD                shift, and go to state 79
    EQUAL              shift, and go to state 80
    DIFF               shift, and go to state 81
    GREATER            shift, and go to state 82
    LESS               shift, and go to state 83
    GREATER_EQUAL      shift, and go to state 84
    LESS_EQUAL         shift, and go to state 85
    RIGHT_PARENTHESIS  shift, and go to state 171


State 148

  105 loopstmt: loopstart • stmt loopend

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    IF                shift, and go to state 5
    WHILE             shift, and go to state 6
    FOR               shift, and go to state 7
    FUNCTION          shift, and go to state 8
    RETURN            shift, and go to state 9
    BREAK             shift, and go to state 10
    CONTINUE          shift, and go to state 11
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACE        shift, and go to state 20
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    D_COLON           shift, and go to state 24

    stmt         go to state 172
    expr         go to state 28
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    objectdef    go to state 35
    block        go to state 36
    funcprefix   go to state 37
    funcdef      go to state 38
    const        go to state 39
    ifprefix     go to state 40
    ifstmts      go to state 41
    whilestart   go to state 42
    whilestmts   go to state 43
    forprefix    go to state 44
    forstmts     go to state 45
    returnstmts  go to state 46


State 149

   98 whilestmts: whilestart whilecond loopstmt •

    $default  reduce using rule 98 (whilestmts)


State 150

   65 elist: elist • COMMA expr
  102 forstmts: forprefix N elist • RIGHT_PARENTHESIS N loopstmt N

    RIGHT_PARENTHESIS  shift, and go to state 173
    COMMA              shift, and go to state 116


State 151

   92 ifprefix: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS •

    $default  reduce using rule 92 (ifprefix)


State 152

  101 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON • M expr SEMICOLON

    $default  reduce using rule 100 (M)

    M  go to state 174


State 153

   58 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS • LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 158


State 154

   74 block: LEFT_BRACE $@6 stmts RIGHT_BRACE •

    $default  reduce using rule 74 (block)


State 155

   70 indexedelem: LEFT_BRACE expr COLON • expr RIGHT_BRACE

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    expr        go to state 175
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 156

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr
   65 elist: elist COMMA expr •

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    EQUAL          shift, and go to state 80
    DIFF           shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    $default  reduce using rule 65 (elist)


State 157

   69 indexed: indexed COMMA indexedelem •

    $default  reduce using rule 69 (indexed)


State 158

   58 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS • elist RIGHT_PARENTHESIS

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 176
    objectdef   go to state 35
    const       go to state 39


State 159

   30 expr: expr AND $@3 M • expr

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    expr        go to state 177
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 160

   32 expr: expr OR $@4 M • expr

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    expr        go to state 178
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 161

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   26     | expr EQUAL $@1 expr •
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr

    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    EQUAL  error (nonassociative)
    DIFF   error (nonassociative)

    $default  reduce using rule 26 (expr)


State 162

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   28     | expr DIFF $@2 expr •
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr

    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    EQUAL  error (nonassociative)
    DIFF   error (nonassociative)

    $default  reduce using rule 28 (expr)


State 163

   53 member: lvalue LEFT_BRACKET expr RIGHT_BRACKET •

    $default  reduce using rule 53 (member)


State 164

   61 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS •

    $default  reduce using rule 61 (normcall)


State 165

   62 methodcall: D_DOT ID LEFT_PARENTHESIS • elist RIGHT_PARENTHESIS

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    $default  reduce using rule 63 (elist)

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 179
    objectdef   go to state 35
    const       go to state 39


State 166

   55 member: call LEFT_BRACKET expr RIGHT_BRACKET •

    $default  reduce using rule 55 (member)


State 167

   56 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS •

    $default  reduce using rule 56 (call)


State 168

   90 idlist: ID •

    $default  reduce using rule 90 (idlist)


State 169

   80 funcargs: LEFT_PARENTHESIS $@8 idlist • RIGHT_PARENTHESIS
   91 idlist: idlist • COMMA ID

    RIGHT_PARENTHESIS  shift, and go to state 180
    COMMA              shift, and go to state 181


State 170

   95 ifstmts: ifprefix stmt elseprefix stmt •

    $default  reduce using rule 95 (ifstmts)


State 171

   97 whilecond: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS •

    $default  reduce using rule 97 (whilecond)


State 172

  105 loopstmt: loopstart stmt • loopend

    $default  reduce using rule 104 (loopend)

    loopend  go to state 182


State 173

  102 forstmts: forprefix N elist RIGHT_PARENTHESIS • N loopstmt N

    $default  reduce using rule 99 (N)

    N  go to state 183


State 174

  101 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON M • expr SEMICOLON

    INTEGER           shift, and go to state 1
    STRING            shift, and go to state 2
    REALCONST         shift, and go to state 3
    ID                shift, and go to state 4
    NOT               shift, and go to state 12
    LOCAL             shift, and go to state 13
    TRUE              shift, and go to state 14
    FALSE             shift, and go to state 15
    NIL               shift, and go to state 16
    MINUS             shift, and go to state 17
    PLUS_PLUS         shift, and go to state 18
    MINUS_MINUS       shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    D_COLON           shift, and go to state 24

    expr        go to state 184
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 175

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr
   70 indexedelem: LEFT_BRACE expr COLON expr • RIGHT_BRACE

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    EQUAL          shift, and go to state 80
    DIFF           shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    RIGHT_BRACE    shift, and go to state 185


State 176

   58 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist • RIGHT_PARENTHESIS
   65 elist: elist • COMMA expr

    RIGHT_PARENTHESIS  shift, and go to state 186
    COMMA              shift, and go to state 116


State 177

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   30     | expr AND $@3 M expr •
   32     | expr • OR $@4 M expr

    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    EQUAL          shift, and go to state 80
    DIFF           shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    $default  reduce using rule 30 (expr)


State 178

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr
   32     | expr OR $@4 M expr •

    AND            shift, and go to state 73
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    EQUAL          shift, and go to state 80
    DIFF           shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    $default  reduce using rule 32 (expr)


State 179

   62 methodcall: D_DOT ID LEFT_PARENTHESIS elist • RIGHT_PARENTHESIS
   65 elist: elist • COMMA expr

    RIGHT_PARENTHESIS  shift, and go to state 187
    COMMA              shift, and go to state 116


State 180

   80 funcargs: LEFT_PARENTHESIS $@8 idlist RIGHT_PARENTHESIS •

    $default  reduce using rule 80 (funcargs)


State 181

   91 idlist: idlist COMMA • ID

    ID  shift, and go to state 188


State 182

  105 loopstmt: loopstart stmt loopend •

    $default  reduce using rule 105 (loopstmt)


State 183

  102 forstmts: forprefix N elist RIGHT_PARENTHESIS N • loopstmt N

    $default  reduce using rule 103 (loopstart)

    loopstart  go to state 148
    loopstmt   go to state 189


State 184

   16 expr: expr • PLUS expr
   17     | expr • MINUS expr
   18     | expr • MUL expr
   19     | expr • DIV expr
   20     | expr • MOD expr
   21     | expr • GREATER expr
   22     | expr • GREATER_EQUAL expr
   23     | expr • LESS expr
   24     | expr • LESS_EQUAL expr
   26     | expr • EQUAL $@1 expr
   28     | expr • DIFF $@2 expr
   30     | expr • AND $@3 M expr
   32     | expr • OR $@4 M expr
  101 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON M expr • SEMICOLON

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    EQUAL          shift, and go to state 80
    DIFF           shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    SEMICOLON      shift, and go to state 190


State 185

   70 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE •

    $default  reduce using rule 70 (indexedelem)


State 186

   58 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS •

    $default  reduce using rule 58 (call)


State 187

   62 methodcall: D_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS •

    $default  reduce using rule 62 (methodcall)


State 188

   91 idlist: idlist COMMA ID •

    $default  reduce using rule 91 (idlist)


State 189

  102 forstmts: forprefix N elist RIGHT_PARENTHESIS N loopstmt • N

    $default  reduce using rule 99 (N)

    N  go to state 191


State 190

  101 forprefix: FOR LEFT_PARENTHESIS elist SEMICOLON M expr SEMICOLON •

    $default  reduce using rule 101 (forprefix)


State 191

  102 forstmts: forprefix N elist RIGHT_PARENTHESIS N loopstmt N •

    $default  reduce using rule 102 (forstmts)
